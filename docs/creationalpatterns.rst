.. _creationalpatterns:

creational patterns
===================

５个创建型模式

Singleton pattern
--------------------

单例模式, 保证无论实例调用多少次，该操作只运行一次。

并发模式需要加锁。

Factory pattern
-------------------

简单工厂模式: 它提供了一种将实例化逻辑委托给子类的方法。

当类中有一些通用处理但所需的子类在运行时动态决定时很有用。或者换句话说，当客户不知道它可能需要什么确切的子类时。

Abstract Factory pattern
---------------------------

抽象工厂模式: 工厂的工厂；一个工厂，它将单独但相关/依赖的工厂组合在一起，而不指定它们的具体类。

当存在相互关联的依赖关系并涉及不那么简单的创建逻辑时.

Builder pattern
------------------

允许您创建不同风格的对象，同时避免构造函数污染。当一个对象可能有多种风格时很有用。或者当创建一个对象涉及很多步骤时。


建造者模式

Prototype pattern
--------------------

原型模式
